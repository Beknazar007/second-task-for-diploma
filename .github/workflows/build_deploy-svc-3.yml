name: Build and deploy Service 3

on:
  pull_request:
    branches:
      - development
      - main
    paths:
      - "service-3/**"
  workflow_dispatch:

jobs:
  build:
    name: Build Service 3
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Build and Deploy with Maven
        run: |
          cd ./service-3
          mvn clean install -DskipTests

          # Fetch version
          version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "Deploying version: $version"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and tag Docker image
        run: |
          docker build -t beknazar007/service-3:${{ github.sha }} .
          docker push beknazar007/service-3:${{ github.sha }}


  deploy_dev:
    needs: build
    if: github.event.pull_request.base.ref == 'development'
    runs-on: ubuntu-latest
    environment: dev
    steps:
      # Authenticate with AWS EKS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      # Update Kubernetes deployment with the new image
      - name: Update Kubernetes deployment
        run: |
          aws eks update-kubeconfig --name qa-eks1-us-east-1a
          kubectl set image deployment/service-3-deployment service-3=beknazar007/service-3:${{ github.sha }}
          kubectl rollout status deployment/service-3-deployment

  deploy_qa:
    needs: build
    if: github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    environment: qa
    steps:
      # Authenticate with AWS EKS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      # Update Kubernetes deployment with the new image
      - name: Update Kubernetes deployment
        run: |
          aws eks update-kubeconfig --name qa-eks1-us-east-1a
          kubectl set image deployment/service-3-deployment service-3=beknazar007/service-3:${{ github.sha }}
          kubectl rollout status deployment/service-3-deployment

  deploy_prod:
    needs: [build, deploy_qa]
    if: github.event.pull_request.base.ref == 'main'
    runs-on: ubuntu-latest
    environment: prod
    steps:
      # Authenticate with AWS EKS
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1  

      # Update Kubernetes deployment with the new image
      - name: Update Kubernetes deployment
        run: |
          aws eks update-kubeconfig --name qa-eks1-us-east-1a
          kubectl set image deployment/service-3-deployment service-3=beknazar007/service-3:${{ github.sha }}
          kubectl rollout status deployment/service-3-deployment